name: CI release

on:
  push:
    tags:
      - 'v\d+'

permissions:
  contents: write
  issues: write

jobs:
  checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT }}

      - uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

      - name: Run unit tests
        run: npm run ci:test:unit

      - name: Install playwright browser
        run: npx playwright install --with-deps chromium

      - name: Run e2e tests
        run: npm run ci:test:e2e
      
    #   - id: get_link
    #     env: 
    #       GH_TOKEN: ${{ github.token }}
    #     run: echo "link=$(gh run --repo ${{ github.repository }} view ${{ github.run_id }} --json jobs --jq '.jobs[] | select(.name == "${{ github.job }}") | .url)" >> $GITHUB_OUTPUT
    # outputs:
    #   link: ${{steps.get_link.outputs.link}}
        
  release:
    needs: checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT }}
          fetch-depth: 0

      - run: echo "COMMIT_TIME=$(git show -s --format=%ci ${{ github.ref_name }})" >> $GITHUB_ENV
      - run: echo "CURRENT_TIME=$(date +'%Y-%m-%d %T')" >> $GITHUB_ENV
      - run: echo "TAG=$(git tag --sort=-committerdate | head -1)" >> $GITHUB_ENV
      - run: echo "PREV_TAG=$(git tag --sort=-committerdate | head -2 | awk '{split($0, tags, "\n")} END {print tags[1]}')" >> $GITHUB_ENV
      - run: echo "CHANGES=$(git log --pretty="- %s" $TAG..$PREV_TAG)" >> $GITHUB_ENV
      - run: echo "COMMITS=$(echo "$CHANGES" | wc -l)" >> $GITHUB_ENV

      - name: Create release issue
        id: create_issue
        uses: JasonEtco/create-an-issue@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG: ${{ github.ref_name }}
          # CHECKS_LINK: ${{ needs.checks.outputs.link }}
        with:
          assignees: ${{ github.actor }}
          filename: .github/issue-template.md
          update_existing: true
          search_existing: all

      - name: Create release branch
        run: |
          git config --global user.name 'IKBOstudent'
          git config --global user.email '90282668+IKBOstudent@users.noreply.github.com'
          git checkout -b release/${{ github.ref_name }}
          git push -f origin release/${{ github.ref_name }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      # - name: Close Issue
      #   run: gh issue close --comment "Auto-closing issue" ${{ steps.create_issue.outputs.number }}
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
